#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

# che-plugin-registry Happy Path workflow
# matrix jobs with alpine and ubi8
name: Happy Path

on:
  pull_request:
    paths:
      - '**/*'
      - '!sidecars/**'
  push:
    paths:
      - '**/*'
      - '!sidecars/**'

jobs:
  happy-path:
    strategy:
      fail-fast: false
      matrix:
        dist: ['alpine', 'rhel']
    runs-on: ubuntu-20.04
    steps:
      - name: Clone source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Clone source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - uses: actions/cache@v2.1.7
        name: Cache yarn dependencies
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v2.1.7
        name: Cache vsix dependencies
        id: download-unpacked-cache
        with:
          path: | 
            /tmp/che-plugin-registry/download-folder
            /tmp/che-plugin-registry/unpack-folder
          key: download-unpacked-cache-${{ hashFiles('**/che-theia-plugins.yaml') }}
          restore-keys: |
            download-unpacked-cache-

      - name: image-build
        run: |
          export SKIP_FORMAT=true
          export SKIP_LINT=true
          export SKIP_TEST=true
          if [[ "${{matrix.dist}}" == "alpine" ]]; then
            docker pull quay.io/eclipse/che-plugin-registry:next
            BUILDER=docker ./build.sh --tag happy-path
          elif [[ "${{matrix.dist}}" == "rhel" ]]; then
            BUILDER=docker ./build.sh --rhel --tag happy-path
          fi  

          # save locally built image
          docker save -o docker-image.tar quay.io/eclipse/che-plugin-registry:happy-path

      - name: Start minikube
        id: run-minikube
        uses: che-incubator/setup-minikube-action@next
        with:
          minikube-version: v1.21.0

      - name: load-image-minikube-registry
        id: load-image-minikube-registry
        run: |
          # load image in the docker registry
          eval $(minikube docker-env)
          docker load --input=docker-image.tar
          # display images
          docker images

      - name: Deploy Eclipse Che
        id: deploy-che
        uses: che-incubator/che-deploy-action@next
        with:
          # use custom image built by this PR
          plugin-registry-image: quay.io/eclipse/che-plugin-registry:happy-path

      - name: Run Happy Path tests
        id: run-happy-path-tests
        uses: dmytro-ndp/happy-path-tests-action@che-20986
        with:
          che-url: ${{ steps.deploy-che.outputs.che-url }}

      - name: Upload Happy Path test report
        uses: actions/upload-artifact@v2
        if:  |
          always() &&
          (steps.run-happy-path-tests.outcome == 'failure')
        with:
          name: Happy path test report for ${{ matrix.dist }}
          path: che/tests/e2e/report

      - name: Collect Eclipse Che logs
        id: collect-che-logs
        if:  |
          always() &&
          (steps.deploy-che.outcome == 'success' || steps.deploy-che.outcome == 'failure')
        run: |
          set -x
          pwd
          mkdir che-logs
          export PODS=$(kubectl get pod --namespace=eclipse-che | awk 'NR>1 {print $1}')
          for pod in $PODS ; do
              kubectl logs --namespace=eclipse-che "${pod}" --namespace=eclipse-che > che-logs/"${pod}".pod.log || true;
          done

          mkdir -p che-logs/workspace-logs
          WORKSPACE_NAMESPACE_NAME=admin-che
          export WS_POD=$(kubectl get pod --namespace=$WORKSPACE_NAMESPACE_NAME | grep ".workspace-" | awk '{print $1}')
          for c in $(kubectl get pod --namespace=$WORKSPACE_NAMESPACE_NAME $WS_POD -o jsonpath="{.spec.containers[*].name}") ; do
              CONTAINER_LOGS_DIR=che-logs/workspace-logs/"${c}"
              mkdir $CONTAINER_LOGS_DIR
              kubectl logs $WS_POD "${c}" --namespace=$WORKSPACE_NAMESPACE_NAME > ${CONTAINER_LOGS_DIR}.container.log || true;
              kubectl cp $WORKSPACE_NAMESPACE_NAME/$WS_POD:che-logs/workspace-logs $CONTAINER_LOGS_DIR -c "${c}" || true;
          done

      - name: Upload Eclipse Che logs
        uses: actions/upload-artifact@v2
        if:  |
          always() &&
          (steps.collect-che-logs.outcome == 'success')
        with:
          name: Eclipse Che logs for ${{ matrix.dist }}
          path: che-logs